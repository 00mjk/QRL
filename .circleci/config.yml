version: 2
jobs:
  build:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: python3 setup.py test --addopts "--cov . --cov-report term-missing --cov-report xml"
      - run: sudo pip install -U coverage codacy-coverage
      - run: if [ "${CIRCLE_BRANCH}" == "master" ]; then python-codacy-coverage -r coverage.xml || echo "failed"; fi

  test_leaks_CLI:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: pip install -U pytest-openfiles pytest-leaks pytest-threadleak pytest-repeat
      - run: python3 setup.py test --addopts "tests/tools/ --open-files --threadleak"

  test_leaks_other:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: pip install -U pytest-openfiles pytest-leaks pytest-threadleak pytest-repeat
      - run: python3 setup.py test --addopts "--ignore=tests/tools/ --open-files --threadleak"

  build_trusty:
    docker:
      - image: qrledger/qrl-docker:trusty
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: python3 --version
      - run: python3 setup.py test

  build_bionic:
    docker:
      - image: qrledger/qrl-docker:bionic
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: python3 setup.py test

  integration_smoke:
    docker:
      - image: qrledger/qrl-docker:xenial
    environment:
      PYTHONPATH: /root/project:/root/project/tests_integration
      TESTINPLACE: 1
    steps:
      - checkout
      - run: git submodule update --init --recursive --remote
      - run: apt install -y python3-venv
      - run: pip install -U -r tests_integration/requirements.txt
      - run: ls tests_integration/tmp
      - run: pytest tests_integration/tests/python/basic

workflows:
  version: 2
  build_all:
    jobs:
      - build
#      - build_trusty
      - build_bionic
      - test_leaks_CLI
      - test_leaks_other
      - integration_smoke
